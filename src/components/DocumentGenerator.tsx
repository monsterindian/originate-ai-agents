
import React from 'react';
import { toast } from 'sonner';
import { Button } from '@/components/ui/button';
import { FileText, Download, Printer } from 'lucide-react';
import { formatCurrency } from '@/services/mockDataService';

interface DocumentGeneratorProps {
  documentType: 'application' | 'risk-assessment' | 'approval' | 'rejection' | 'funding';
  applicationData: any;
  onClose?: () => void;
}

const DocumentGenerator: React.FC<DocumentGeneratorProps> = ({ 
  documentType, 
  applicationData,
  onClose
}) => {
  const generateDocument = () => {
    toast.info(`Generating ${documentType} document...`);
    
    setTimeout(() => {
      const win = window.open("", "_blank");
      if (!win) {
        toast.error("Unable to open a new window to display the document.");
        return;
      }
      
      const documentContent = renderDocumentContent();
      
      win.document.write(`
        <html>
          <head>
            <title>${getDocumentTitle()}</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 0; padding: 20px; color: #333; }
              .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; border-bottom: 2px solid #eee; padding-bottom: 20px; }
              .logo { max-width: 180px; }
              .document-title { font-size: 24px; font-weight: bold; margin-bottom: 5px; }
              .document-subtitle { font-size: 14px; color: #666; }
              h1 { color: #333; margin-top: 30px; }
              h2 { color: #444; margin-top: 25px; font-size: 18px; }
              .section { margin-bottom: 25px; }
              table { width: 100%; border-collapse: collapse; margin: 20px 0; }
              th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }
              th { background-color: #f5f5f5; font-weight: bold; }
              .risk-high { color: #e11d48; }
              .risk-medium { color: #f59e0b; }
              .risk-low { color: #10b981; }
              .success { color: #10b981; }
              .warning { color: #f59e0b; }
              .error { color: #e11d48; }
              .signature { margin-top: 50px; border-top: 1px solid #ddd; padding-top: 20px; }
              .footer { margin-top: 50px; font-size: 12px; color: #666; text-align: center; }
              .watermark { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%) rotate(-45deg); font-size: 100px; color: rgba(0,0,0,0.03); pointer-events: none; z-index: -1; }
              .badge { display: inline-block; padding: 3px 8px; border-radius: 12px; font-size: 12px; font-weight: bold; }
              .badge-success { background: #d1fae5; color: #065f46; }
              .badge-warning { background: #fef3c7; color: #92400e; }
              .badge-error { background: #fee2e2; color: #b91c1c; }
              ul { padding-left: 20px; }
              li { margin-bottom: 5px; }
              .highlight-box { background: #f9fafb; border: 1px solid #e5e7eb; padding: 15px; border-radius: 5px; margin: 15px 0; }
              @media print {
                .no-print { display: none; }
                body { padding: 0; }
                .watermark { display: none; }
              }
            </style>
          </head>
          <body>
            <div class="watermark">GaIgentic</div>
            <div class="header">
              <div>
                <div class="document-title">${getDocumentTitle()}</div>
                <div class="document-subtitle">Generated on ${new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</div>
              </div>
              <img src="/lovable-uploads/c358cff4-5e06-49e8-af0b-d9e4c7099001.png" class="logo" alt="GaIgentic Logo">
            </div>
            
            <div class="no-print" style="text-align: right; margin-bottom: 20px;">
              <button onclick="window.print()" style="background: #f3f4f6; border: 1px solid #d1d5db; padding: 8px 16px; border-radius: 4px; cursor: pointer; margin-right: 10px;">
                Print Document
              </button>
              <button onclick="window.close()" style="background: #f3f4f6; border: 1px solid #d1d5db; padding: 8px 16px; border-radius: 4px; cursor: pointer;">
                Close
              </button>
            </div>
            
            ${documentContent}
            
            <div class="footer">
              <p>This document was automatically generated by GaIgentic Financial System.</p>
              <p>Â© ${new Date().getFullYear()} GaIgentic. All rights reserved.</p>
            </div>
          </body>
        </html>
      `);
      
      win.document.close();
    }, 1500);
  };
  
  const getDocumentTitle = () => {
    switch (documentType) {
      case 'application':
        return 'Loan Application Summary';
      case 'risk-assessment':
        return 'Risk Assessment Report';
      case 'approval':
        return 'Loan Approval Letter';
      case 'rejection':
        return 'Application Decision Notice';
      case 'funding':
        return 'Funding Authorization Document';
      default:
        return 'Document';
    }
  };
  
  const renderDocumentContent = () => {
    switch (documentType) {
      case 'application':
        return renderApplicationSummary();
      case 'risk-assessment':
        return renderRiskAssessment();
      case 'approval':
        return renderApprovalLetter();
      case 'rejection':
        return renderRejectionLetter();
      case 'funding':
        return renderFundingDocument();
      default:
        return '<p>Document content not available.</p>';
    }
  };
  
  const renderApplicationSummary = () => {
    const { id, borrower, amount, purpose, dateSubmitted, status, assetClass, term, interestRate, collateral } = applicationData;
    
    // Format borrower name
    const borrowerName = borrower.companyName || `${borrower.firstName} ${borrower.lastName}`;
    
    return `
      <div class="section">
        <h1>Loan Application Summary</h1>
        <p>Application ID: <strong>${id}</strong></p>
        
        <h2>Borrower Information</h2>
        <table>
          <tr>
            <th width="30%">Borrower Name</th>
            <td>${borrowerName}</td>
          </tr>
          <tr>
            <th>Contact Email</th>
            <td>${borrower.email || 'N/A'}</td>
          </tr>
          <tr>
            <th>Contact Phone</th>
            <td>${borrower.phone || 'N/A'}</td>
          </tr>
          <tr>
            <th>Address</th>
            <td>
              ${borrower.address ? 
                `${borrower.address.street}<br/>
                ${borrower.address.city}, ${borrower.address.state} ${borrower.address.zipCode}<br/>
                ${borrower.address.country}` : 'N/A'}
            </td>
          </tr>
          ${borrower.creditScore ? `
          <tr>
            <th>Credit Score</th>
            <td>${borrower.creditScore}</td>
          </tr>` : ''}
        </table>
        
        <h2>Loan Details</h2>
        <table>
          <tr>
            <th width="30%">Loan Amount</th>
            <td>${typeof amount === 'number' ? formatCurrency(amount) : amount}</td>
          </tr>
          <tr>
            <th>Purpose</th>
            <td>${purpose}</td>
          </tr>
          <tr>
            <th>Asset Class</th>
            <td>${assetClass.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</td>
          </tr>
          <tr>
            <th>Term</th>
            <td>${term} months</td>
          </tr>
          ${interestRate ? `
          <tr>
            <th>Interest Rate</th>
            <td>${interestRate}%</td>
          </tr>` : ''}
          ${collateral ? `
          <tr>
            <th>Collateral</th>
            <td>
              <div>Type: ${collateral.type}</div>
              <div>Value: ${typeof collateral.value === 'number' ? formatCurrency(collateral.value) : collateral.value}</div>
              <div>Description: ${collateral.description}</div>
            </td>
          </tr>` : ''}
        </table>
        
        <h2>Application Status</h2>
        <div class="highlight-box">
          <p>Status: <span class="badge ${status === 'approved' || status === 'funded' ? 'badge-success' : 
                                        status === 'rejected' ? 'badge-error' : 'badge-warning'}">${
                                        status.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</span></p>
          <p>Date Submitted: ${dateSubmitted || 'Not yet submitted'}</p>
          <p>Application Completion: ${applicationData.completeness}%</p>
        </div>
        
        ${applicationData.notes && applicationData.notes.length > 0 ? `
        <h2>Application Notes</h2>
        <table>
          ${applicationData.notes.map(note => `
            <tr>
              <td width="25%">${new Date(note.createdAt).toLocaleDateString()}</td>
              <td>${note.content}</td>
              <td width="20%">By: ${note.createdBy}</td>
            </tr>
          `).join('')}
        </table>
        ` : ''}
      </div>
      
      <div class="signature">
        <p>Document generated by GaIgentic Financial System</p>
        <p>Date: ${new Date().toLocaleDateString()}</p>
      </div>
    `;
  };
  
  const renderRiskAssessment = () => {
    const { id, borrower, risk, amount, purpose, assetClass } = applicationData;
    
    // Format borrower name
    const borrowerName = borrower.companyName || `${borrower.firstName} ${borrower.lastName}`;
    
    // Format risk data - handle different possible structures
    let riskLevel = 'Medium';
    let riskScore = 50;
    let riskFactors = [];
    let riskStrengths = [];
    let riskRatios = {};
    
    if (risk) {
      if (typeof risk === 'string') {
        riskLevel = risk;
      } else {
        riskLevel = risk.level || risk.rating || riskLevel;
        riskScore = risk.score || riskScore;
        riskFactors = risk.factors || [];
        riskStrengths = risk.strengths || [];
        riskRatios = risk.ratios || {};
      }
    }
    
    return `
      <div class="section">
        <h1>Risk Assessment Report</h1>
        <p>Application ID: <strong>${id}</strong></p>
        
        <h2>Application Overview</h2>
        <table>
          <tr>
            <th width="30%">Borrower</th>
            <td>${borrowerName}</td>
          </tr>
          <tr>
            <th>Loan Amount</th>
            <td>${typeof amount === 'number' ? formatCurrency(amount) : amount}</td>
          </tr>
          <tr>
            <th>Purpose</th>
            <td>${purpose}</td>
          </tr>
          <tr>
            <th>Asset Class</th>
            <td>${assetClass.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</td>
          </tr>
        </table>
        
        <h2>Risk Assessment Summary</h2>
        <div class="highlight-box">
          <p>Overall Risk Rating: <span class="risk-${riskLevel.toLowerCase()}">${riskLevel} Risk</span></p>
          <p>Risk Score: ${riskScore}/100</p>
          <div style="background-color: #f0f0f0; height: 20px; width: 100%; border-radius: 10px; margin: 10px 0;">
            <div style="background-color: ${
              riskLevel.toLowerCase() === 'low' ? '#10b981' : 
              riskLevel.toLowerCase() === 'medium' ? '#f59e0b' : '#e11d48'
            }; height: 100%; width: ${riskScore}%; border-radius: 10px;"></div>
          </div>
        </div>
        
        <h2>Key Risk Factors</h2>
        ${riskFactors.length > 0 ? `
        <ul>
          ${riskFactors.map(factor => `<li>${factor}</li>`).join('')}
        </ul>
        ` : '<p>No specific risk factors identified.</p>'}
        
        <h2>Key Strengths</h2>
        ${riskStrengths.length > 0 ? `
        <ul>
          ${riskStrengths.map(strength => `<li>${strength}</li>`).join('')}
        </ul>
        ` : '<p>No specific strengths highlighted.</p>'}
        
        ${Object.keys(riskRatios).length > 0 ? `
        <h2>Financial Ratios & Metrics</h2>
        <table>
          ${Object.entries(riskRatios).map(([key, value]) => `
            <tr>
              <th width="40%">${key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}</th>
              <td>${value}</td>
            </tr>
          `).join('')}
        </table>
        ` : ''}
        
        <h2>Assessment Conclusion</h2>
        <p>${
          riskLevel.toLowerCase() === 'low' ? 
          'Based on our comprehensive analysis, this application presents a low risk profile. The borrower demonstrates strong financial stability, appropriate credit history, and the loan purpose aligns well with our lending criteria.' :
          
          riskLevel.toLowerCase() === 'medium' ? 
          'Based on our comprehensive analysis, this application presents a moderate risk profile. While there are some areas of concern, these are balanced by positive aspects of the borrower's profile and application. Additional monitoring or modifications to standard terms may be warranted.' :
          
          'Based on our comprehensive analysis, this application presents a high risk profile. Several significant risk factors have been identified that require careful consideration. Additional collateral, guarantees, or significant modifications to terms would be necessary to proceed with this application.'
        }</p>
        
        <p>Recommendation: ${
          riskLevel.toLowerCase() === 'low' ? 
          'Approval with standard terms' :
          
          riskLevel.toLowerCase() === 'medium' ? 
          'Conditional approval with enhanced monitoring' :
          
          'Application requires significant additional support or restructuring before approval'
        }</p>
      </div>
      
      <div class="signature">
        <p>Risk assessment conducted by GaIgentic Underwriting Team</p>
        <p>Date: ${new Date().toLocaleDateString()}</p>
      </div>
    `;
  };
  
  const renderApprovalLetter = () => {
    const { id, borrower, amount, purpose, term, interestRate } = applicationData;
    
    // Format borrower name
    const borrowerName = borrower.companyName || `${borrower.firstName} ${borrower.lastName}`;
    
    return `
      <div class="section">
        <h1>Loan Approval Letter</h1>
        <p style="margin-bottom: 30px;">Date: ${new Date().toLocaleDateString()}</p>
        
        <p>Dear ${borrowerName},</p>
        
        <p>We are pleased to inform you that your loan application (ID: <strong>${id}</strong>) has been <span class="success">APPROVED</span>.</p>
        
        <h2>Approved Loan Terms</h2>
        <table>
          <tr>
            <th width="30%">Loan Amount</th>
            <td>${typeof amount === 'number' ? formatCurrency(amount) : amount}</td>
          </tr>
          <tr>
            <th>Purpose</th>
            <td>${purpose}</td>
          </tr>
          <tr>
            <th>Loan Term</th>
            <td>${term} months</td>
          </tr>
          <tr>
            <th>Interest Rate</th>
            <td>${interestRate}%</td>
          </tr>
          <tr>
            <th>Estimated Monthly Payment</th>
            <td>${formatCurrency((amount * (interestRate/1200)) / (1 - Math.pow(1 + (interestRate/1200), -term)))}</td>
          </tr>
        </table>
        
        <h2>Next Steps</h2>
        <ol>
          <li>Review and sign the attached loan agreement documents</li>
          <li>Provide any additional documentation required for closing</li>
          <li>Schedule an appointment with your loan officer to complete the process</li>
        </ol>
        
        <div class="highlight-box">
          <p>Important: This approval is valid for 30 days from the date of this letter. If the loan is not closed within this period, we reserve the right to review and potentially adjust the terms based on current market conditions.</p>
        </div>
        
        <p style="margin-top: 30px;">Congratulations on your loan approval. We look forward to helping you achieve your financial goals. Should you have any questions or require further assistance, please do not hesitate to contact your relationship manager.</p>
        
        <p style="margin-top: 30px;">Sincerely,</p>
        <p style="margin-top: 50px;">GaIgentic Financial Team</p>
      </div>
    `;
  };
  
  const renderRejectionLetter = () => {
    const { id, borrower, amount, purpose } = applicationData;
    
    // Format borrower name
    const borrowerName = borrower.companyName || `${borrower.firstName} ${borrower.lastName}`;
    
    return `
      <div class="section">
        <h1>Application Decision Notice</h1>
        <p style="margin-bottom: 30px;">Date: ${new Date().toLocaleDateString()}</p>
        
        <p>Dear ${borrowerName},</p>
        
        <p>Thank you for your recent loan application (ID: <strong>${id}</strong>) for ${typeof amount === 'number' ? formatCurrency(amount) : amount} for the purpose of ${purpose}.</p>
        
        <p>After careful consideration and a thorough review of your application, we regret to inform you that we are unable to approve your loan request at this time.</p>
        
        <h2>Factors Considered in Our Decision</h2>
        <ul>
          <li>Credit history and current credit obligations</li>
          <li>Income verification and debt-to-income ratio analysis</li>
          <li>Collateral valuation and loan-to-value assessment</li>
          <li>Industry and market risk factors</li>
        </ul>
        
        <div class="highlight-box">
          <p>You have the right to request specific reasons for our decision within 60 days. You may also request a copy of the credit report we used in our evaluation.</p>
        </div>
        
        <h2>Alternative Options</h2>
        <p>We encourage you to consider the following alternatives:</p>
        <ul>
          <li>Apply for a different loan product that may better suit your current financial situation</li>
          <li>Work with our financial advisors to strengthen your application for future consideration</li>
          <li>Explore partnership opportunities with our small business development team</li>
        </ul>
        
        <p style="margin-top: 30px;">We value your interest in GaIgentic Financial and would be happy to discuss alternative financing options or ways to improve your future applications. Please contact our customer service team to schedule a consultation.</p>
        
        <p style="margin-top: 30px;">Sincerely,</p>
        <p style="margin-top: 50px;">GaIgentic Financial Team</p>
      </div>
    `;
  };
  
  const renderFundingDocument = () => {
    const { id, borrower, amount, purpose, dateApproved = new Date().toLocaleDateString(), term, interestRate } = applicationData;
    
    // Format borrower name
    const borrowerName = borrower.companyName || `${borrower.firstName} ${borrower.lastName}`;
    
    return `
      <div class="section">
        <h1>Funding Authorization Document</h1>
        <p>Application ID: <strong>${id}</strong></p>
        
        <div class="highlight-box">
          <h2 style="margin-top: 0;">Funding Authorization</h2>
          <p>This document authorizes the disbursement of funds for the approved loan application referenced above.</p>
          <p>Authorization Date: ${new Date().toLocaleDateString()}</p>
          <p>Funding Status: <span class="badge badge-success">Approved for Disbursement</span></p>
        </div>
        
        <h2>Loan Details</h2>
        <table>
          <tr>
            <th width="30%">Borrower</th>
            <td>${borrowerName}</td>
          </tr>
          <tr>
            <th>Approved Amount</th>
            <td>${typeof amount === 'number' ? formatCurrency(amount) : amount}</td>
          </tr>
          <tr>
            <th>Purpose</th>
            <td>${purpose}</td>
          </tr>
          <tr>
            <th>Approval Date</th>
            <td>${dateApproved}</td>
          </tr>
          <tr>
            <th>Loan Term</th>
            <td>${term} months</td>
          </tr>
          <tr>
            <th>Interest Rate</th>
            <td>${interestRate}%</td>
          </tr>
        </table>
        
        <h2>Disbursement Information</h2>
        <table>
          <tr>
            <th width="30%">Method of Disbursement</th>
            <td>Electronic Fund Transfer</td>
          </tr>
          <tr>
            <th>Scheduled Disbursement Date</th>
            <td>${new Date(new Date().setDate(new Date().getDate() + 2)).toLocaleDateString()}</td>
          </tr>
          <tr>
            <th>Disbursement Amount</th>
            <td>${typeof amount === 'number' ? formatCurrency(amount) : amount}</td>
          </tr>
        </table>
        
        <h2>Terms and Conditions</h2>
        <ul>
          <li>Funds will be disbursed to the account specified in the loan agreement</li>
          <li>First payment due 30 days after disbursement</li>
          <li>All conditions precedent have been satisfied</li>
          <li>Loan documents have been properly executed and recorded where applicable</li>
        </ul>
        
        <div class="highlight-box">
          <p><strong>Important Notice:</strong> This funding authorization is valid for 5 business days from the authorization date. If disbursement cannot be completed within this timeframe, a new authorization will be required.</p>
        </div>
      </div>
      
      <div style="margin-top: 50px;">
        <p style="border-top: 1px solid #ddd; padding-top: 20px;">Authorized by: GaIgentic Financial Funding Department</p>
        <p>Authorization ID: FND-${Math.random().toString(36).substring(2, 10).toUpperCase()}</p>
        <p>Date: ${new Date().toLocaleDateString()}</p>
      </div>
    `;
  };

  return (
    <div className="flex flex-col space-y-2">
      <Button onClick={generateDocument} className="w-full">
        <FileText className="mr-2 h-4 w-4" />
        Generate {getDocumentTitle()}
      </Button>
      
      <div className="flex gap-2">
        <Button variant="outline" className="flex-1">
          <Download className="mr-2 h-4 w-4" />
          Save PDF
        </Button>
        <Button variant="outline" className="flex-1">
          <Printer className="mr-2 h-4 w-4" />
          Print
        </Button>
      </div>
    </div>
  );
};

export default DocumentGenerator;
